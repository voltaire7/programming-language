proc [symbol] [
    item-in 1 symbol _
] item-in 0 [as] _

proc [] [
    item-in 2 [_]
] as [return]

proc [] [
    item-in 0
] as [item]

proc [] [
    item-in 1 [_]
] as [ch]

proc [if-true] [
    ? if-true []
] as [then]

proc [if-false] [
    ? [] if-false
] as [else]

[LOOPS]
proc [init cond incr body] [
    do-here init
    label [loop]
    do-here cond ? [
        do-here body
        do-here incr

        goto loop
    ] []
] as [for]

proc [cond body] [
    label [loop]
    do-here cond ? [
        do-here body

        goto loop
    ] []
] as [while]

proc [cond body] [
    label [loop]
    do-here body
    do-here cond ? [goto loop] []
] as [do-while]

proc [body] [
    label [loop]
    do-here body
    ? [goto loop] []
] as [loop]

proc [it body] [
    label [top]
    do body
    -1 + it as [it] ? [goto top] []
] as [repeat]

[SYSCALLS]
macro [exit-code] [
    syscall 1 exit-code
] as [exit]

proc [fd buf nbytes] [
    syscall 3 [fd buf nbytes]
] as [read]

proc [fd buf nbytes] [
    syscall 4 [fd buf nbytes]
] as [write]


