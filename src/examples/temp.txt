proc [symbol1] [
    item-in 1 symbol1 _
] item-in 0 [as] _

proc [layer symbol] [
    as [val]
    1 + layer
    item-in _ symbol val
] as [as-in]

proc [] [
    item-in 1 [_]
] as [ch]

proc [] [
    item-in 0
] as [item]

proc [] [
    item-in 2 [_]
] as [return]

item [stdin]  0
item [stdout] 1

proc [exit-code] [
    syscall 1 [exit-code]
] as [exit]

proc [fd buf nbytes] [
    syscall 3 [fd buf nbytes]
    return _
] as [read]

proc [fd buf nbytes] [
    syscall 4 [fd buf nbytes]
    return _
] as [write]

proc [] [
    print [%c]
] as [printc]

proc [] [
    print [%i]
] as [printi]

proc [body] [
    label [loop]
    do-here body
    ? [goto loop] []
] as [loop]

[+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+]

proc [offset size ptr] [
    ch offset + ptr
    get size _
    return _
] as [get-at]

proc [offset size ptr val] [
    ch offset + ptr
    set size _ val
] as [set-at]

proc [dest src] [
    item [i] 0
    get 1 src
    loop [
        set-at i 1 dest _
        1 + i as-in 1 [i]
        get-at i 1 src
    ]
    set-at i 1 dest '\0'
] as [strcpy]

item [dest] [Hello, World!\n]
item [src] [World!\n]
strcpy dest src
print dest


